val mu = Val[Double]
val NPP = Val[Double]
val num_predators = Val[Int]
val num_herbivores = Val[Int]
val H0_mean = Val[Double]
val connectivity = Val[Double]
val total_biomass = Val[Double]
val are_there_extinctions = Val[Int]

val juliaTask = JuliaTask(
  script = (workDirectory / "nppModel_forOM.jl"),
  libraries = Seq("DifferentialEquations", "Distributions", "Random", "SciMLBase"),
) set (
  inputs += mu.mapped,
  inputs += NPP.mapped,
  inputs += num_predators.mapped,
  inputs += num_herbivores.mapped,
  inputs += H0_mean.mapped,
  inputs += connectivity.mapped,
  outputs += total_biomass mapped "total_biomass",
  outputs += are_there_extinctions mapped "are_there_extinctions"
)

val env = LocalEnvironment(10)

// OSE method
OSEEvolution(
  evaluation = juliaTask,
  parallelism = 10,
  termination = 5000,
  origin = Seq(
    mu  in (0.0 to 1.0 by 0.1),
    NPP in (10.0 to 11000.0 by 1000.0),
    num_herbivores in (3 to 20 by 1),
    num_predators in (0 to 10 by 1),
    H0_mean in (1.0 to 100.0 by 20.0),
    connectivity in (0.0 to 1.0 by 0.2) 
    ),
  objective = Seq(
    total_biomass under 0.5)
) hook (workDirectory / "results_ose_long_new.omr", frequency = 100) on env